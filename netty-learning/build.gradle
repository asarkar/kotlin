buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath(
                "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion",
                "io.spring.gradle:dependency-management-plugin:$dependencyManagementPluginVersion"
        )
    }
}

group "org.abhijitsarkar.kotlin"
version "1.0-SNAPSHOT"

subprojects {
    apply plugin: "kotlin"
    apply plugin: "io.spring.dependency-management"

    repositories {
        mavenCentral()
    }

    dependencyManagement {
        imports {
            mavenBom "io.netty:netty-bom:$nettyVersion"
        }
    }

    if (project.name != "common") {
        dependencies {
            implementation(project(":common"))
        }
    }

    dependencies {
        implementation(
                "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion",
                "io.netty:netty-buffer",
                "io.netty:netty-handler",
                "org.slf4j:slf4j-api:$slf4jVersion",
                "ch.qos.logback:logback-classic:$logbackVersion"
        )
        testImplementation(
                "org.jetbrains.kotlin:kotlin-test:$kotlinVersion",
                "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"
        )
    }

    test {
        ["io.netty.leakDetectionLevel", "io.netty.leakDetection.level"].each {
            systemProperty(it, "PARANOID")
        }
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
        kotlinOptions.jvmTarget = "1.8"
    }
}

project(":proxy") {
    repositories {
        jcenter()
    }

    jar {
        manifest {
            attributes "Main-Class": "org.abhijitsarkar.kotlin.netty.proxy.ProxyKt"
        }

        from {
            configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
        }
    }

    dependencies {
        implementation(
                "net.sf.jopt-simple:jopt-simple:$joptSimpleVersion",
                "io.netty:netty-codec-http"
        )
    }
}

project(":echo-client-server-reactor") {
    dependencyManagement {
        imports {
            mavenBom "io.projectreactor:reactor-bom:$reactorBomVersion"
        }
    }
    dependencies {
        implementation("io.projectreactor.ipc:reactor-netty")
    }
}

project(":gzip") {
    dependencies {
        testImplementation("org.apache.commons:commons-compress:$commonsCompressVersion")
    }
}